# coding: utf-8

"""
Ryhti API

Rakennetun ympäristön tietojärjestelmän rajapinta

The version of the OpenAPI document: 1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from ryhti_api_client.models.land_use_restriction import LandUseRestriction


class TestLandUseRestriction(unittest.TestCase):
    """LandUseRestriction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LandUseRestriction:
        """Test LandUseRestriction
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `LandUseRestriction`
        """
        model = LandUseRestriction()
        if include_optional:
            return LandUseRestriction(
                land_use_restriction_key = '',
                land_use_restriction_uri = '',
                period_of_validity = ryhti_api_client.models.time_period_date_only.TimePeriodDateOnly(
                    begin = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    end = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                land_use_restriction_objects = [
                    ryhti_api_client.models.land_use_restriction_object.LandUseRestrictionObject(
                        land_use_restriction_object_key = '', 
                        land_use_restriction_object_uri = '', 
                        related_properties = [
                            ''
                            ], 
                        related_plans = [
                            ryhti_api_client.models.related_plan.RelatedPlan(
                                related_plan_uri = '', 
                                related_producer_plan_identifier = '', )
                            ], 
                        geometry = null, )
                    ]
            )
        else:
            return LandUseRestriction(
                land_use_restriction_key = '',
                period_of_validity = ryhti_api_client.models.time_period_date_only.TimePeriodDateOnly(
                    begin = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    end = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                land_use_restriction_objects = [
                    ryhti_api_client.models.land_use_restriction_object.LandUseRestrictionObject(
                        land_use_restriction_object_key = '', 
                        land_use_restriction_object_uri = '', 
                        related_properties = [
                            ''
                            ], 
                        related_plans = [
                            ryhti_api_client.models.related_plan.RelatedPlan(
                                related_plan_uri = '', 
                                related_producer_plan_identifier = '', )
                            ], 
                        geometry = null, )
                    ],
        )
        """

    def testLandUseRestriction(self):
        """Test LandUseRestriction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
