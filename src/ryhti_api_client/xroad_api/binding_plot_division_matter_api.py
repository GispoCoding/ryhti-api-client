# coding: utf-8

"""
Ryhti API

Rakennetun ympäristön tietojärjestelmän rajapinta

The version of the OpenAPI document: 1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from ryhti_api_client.models.binding_plot_division_matter_create import (
    BindingPlotDivisionMatterCreate,
)
from ryhti_api_client.models.binding_plot_division_matter_phase import (
    BindingPlotDivisionMatterPhase,
)
from ryhti_api_client.models.binding_plot_division_matter_response import (
    BindingPlotDivisionMatterResponse,
)
from ryhti_api_client.models.binding_plot_division_matter_update import (
    BindingPlotDivisionMatterUpdate,
)
from ryhti_api_client.models.plan_effects import PlanEffects
from ryhti_api_client.models.reserve_permanent_binding_plot_division_identifier_command import (
    ReservePermanentBindingPlotDivisionIdentifierCommand,
)
from ryhti_api_client.models.success_response import SuccessResponse

from ryhti_api_client.api_client import ApiClient, RequestSerialized
from ryhti_api_client.api_response import ApiResponse
from ryhti_api_client.rest import RESTResponseType


class BindingPlotDivisionMatterApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_get(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> BindingPlotDivisionMatterResponse:
        """Sitovan tonttijaon asian hakeminen pysyvällä sitovan tonttijaon tunnuksella.


        :param permanent_binding_plot_division_identifier: (required)
        :type permanent_binding_plot_division_identifier: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_get_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "BindingPlotDivisionMatterResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_get_with_http_info(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[BindingPlotDivisionMatterResponse]:
        """Sitovan tonttijaon asian hakeminen pysyvällä sitovan tonttijaon tunnuksella.


        :param permanent_binding_plot_division_identifier: (required)
        :type permanent_binding_plot_division_identifier: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_get_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "BindingPlotDivisionMatterResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_get_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Sitovan tonttijaon asian hakeminen pysyvällä sitovan tonttijaon tunnuksella.


        :param permanent_binding_plot_division_identifier: (required)
        :type permanent_binding_plot_division_identifier: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_get_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "BindingPlotDivisionMatterResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_get_serialize(
        self,
        permanent_binding_plot_division_identifier,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="GET",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_get(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_phase_key: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> BindingPlotDivisionMatterPhase:
        """Sitovan tonttijaon asian vaiheen hakeminen avaimella.


        :param permanent_binding_plot_division_identifier: (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: (required)
        :type binding_plot_division_matter_phase_key: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_get_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "BindingPlotDivisionMatterPhase",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_get_with_http_info(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_phase_key: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[BindingPlotDivisionMatterPhase]:
        """Sitovan tonttijaon asian vaiheen hakeminen avaimella.


        :param permanent_binding_plot_division_identifier: (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: (required)
        :type binding_plot_division_matter_phase_key: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_get_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "BindingPlotDivisionMatterPhase",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_get_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_phase_key: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Sitovan tonttijaon asian vaiheen hakeminen avaimella.


        :param permanent_binding_plot_division_identifier: (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: (required)
        :type binding_plot_division_matter_phase_key: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_get_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "BindingPlotDivisionMatterPhase",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_get_serialize(
        self,
        permanent_binding_plot_division_identifier,
        binding_plot_division_matter_phase_key,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        if binding_plot_division_matter_phase_key is not None:
            _path_params["bindingPlotDivisionMatterPhaseKey"] = (
                binding_plot_division_matter_phase_key
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="GET",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}/phase/{bindingPlotDivisionMatterPhaseKey}",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_post(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_phase_key: Annotated[
            StrictStr,
            Field(
                description="Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle."
            ),
        ],
        binding_plot_division_matter_phase: Annotated[
            BindingPlotDivisionMatterPhase,
            Field(
                description="Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SuccessResponse:
        """Rajapinta sitovan tonttijaon asian vaiheen lisäämiseen olemassa olevalle sitovan tonttijaon asialle.

        Sitovan tonttijaon asian täytyy olla jo lisättynä järjestelmään. Uusi vaihe lisätään edellisen perään.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle. (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase: Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan. (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_post_with_http_info(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_phase_key: Annotated[
            StrictStr,
            Field(
                description="Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle."
            ),
        ],
        binding_plot_division_matter_phase: Annotated[
            BindingPlotDivisionMatterPhase,
            Field(
                description="Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SuccessResponse]:
        """Rajapinta sitovan tonttijaon asian vaiheen lisäämiseen olemassa olevalle sitovan tonttijaon asialle.

        Sitovan tonttijaon asian täytyy olla jo lisättynä järjestelmään. Uusi vaihe lisätään edellisen perään.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle. (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase: Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan. (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_post_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_phase_key: Annotated[
            StrictStr,
            Field(
                description="Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle."
            ),
        ],
        binding_plot_division_matter_phase: Annotated[
            BindingPlotDivisionMatterPhase,
            Field(
                description="Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta sitovan tonttijaon asian vaiheen lisäämiseen olemassa olevalle sitovan tonttijaon asialle.

        Sitovan tonttijaon asian täytyy olla jo lisättynä järjestelmään. Uusi vaihe lisätään edellisen perään.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle. (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase: Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan. (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_post_serialize(
        self,
        permanent_binding_plot_division_identifier,
        binding_plot_division_matter_phase_key,
        binding_plot_division_matter_phase,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        if binding_plot_division_matter_phase_key is not None:
            _path_params["bindingPlotDivisionMatterPhaseKey"] = (
                binding_plot_division_matter_phase_key
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if binding_plot_division_matter_phase is not None:
            _body_params = binding_plot_division_matter_phase

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}/phase/{bindingPlotDivisionMatterPhaseKey}",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_put(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_phase_key: StrictStr,
        binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Rajapinta jo tallennetun vaiheen päivittämiseen.


        :param permanent_binding_plot_division_identifier:  (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key:  (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase:  (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_put_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "400": "ProblemDetails",
            "404": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_put_with_http_info(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_phase_key: StrictStr,
        binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Rajapinta jo tallennetun vaiheen päivittämiseen.


        :param permanent_binding_plot_division_identifier:  (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key:  (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase:  (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_put_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "400": "ProblemDetails",
            "404": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_put_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_phase_key: StrictStr,
        binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta jo tallennetun vaiheen päivittämiseen.


        :param permanent_binding_plot_division_identifier:  (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key:  (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase:  (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_put_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "400": "ProblemDetails",
            "404": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_put_serialize(
        self,
        permanent_binding_plot_division_identifier,
        binding_plot_division_matter_phase_key,
        binding_plot_division_matter_phase,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        if binding_plot_division_matter_phase_key is not None:
            _path_params["bindingPlotDivisionMatterPhaseKey"] = (
                binding_plot_division_matter_phase_key
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if binding_plot_division_matter_phase is not None:
            _body_params = binding_plot_division_matter_phase

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="PUT",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}/phase/{bindingPlotDivisionMatterPhaseKey}",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_validate_post(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_phase_key: Annotated[
            StrictStr,
            Field(
                description="Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle."
            ),
        ],
        binding_plot_division_matter_phase: Annotated[
            BindingPlotDivisionMatterPhase,
            Field(
                description="Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SuccessResponse:
        """Rajapinta sitovan tonttijaon asian vaiheen validoimiseen ilman tallennusta.

        Sitovan tonttijaon asian täytyy olla jo lisättynä järjestelmään. Uusi vaihe lisätään edellisen perään.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle. (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase: Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan. (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_validate_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_validate_post_with_http_info(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_phase_key: Annotated[
            StrictStr,
            Field(
                description="Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle."
            ),
        ],
        binding_plot_division_matter_phase: Annotated[
            BindingPlotDivisionMatterPhase,
            Field(
                description="Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SuccessResponse]:
        """Rajapinta sitovan tonttijaon asian vaiheen validoimiseen ilman tallennusta.

        Sitovan tonttijaon asian täytyy olla jo lisättynä järjestelmään. Uusi vaihe lisätään edellisen perään.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle. (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase: Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan. (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_validate_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_validate_post_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_phase_key: Annotated[
            StrictStr,
            Field(
                description="Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle."
            ),
        ],
        binding_plot_division_matter_phase: Annotated[
            BindingPlotDivisionMatterPhase,
            Field(
                description="Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta sitovan tonttijaon asian vaiheen validoimiseen ilman tallennusta.

        Sitovan tonttijaon asian täytyy olla jo lisättynä järjestelmään. Uusi vaihe lisätään edellisen perään.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_phase_key: Pysyvä yksilöivä tunnus sitovan tonttijaon asian vaiheelle. (required)
        :type binding_plot_division_matter_phase_key: str
        :param binding_plot_division_matter_phase: Lisättävä sitovan tonttijaon asian vaihe kokonaisuudessaan. (required)
        :type binding_plot_division_matter_phase: BindingPlotDivisionMatterPhase
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_validate_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_phase_key=binding_plot_division_matter_phase_key,
            binding_plot_division_matter_phase=binding_plot_division_matter_phase,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_phase_binding_plot_division_matter_phase_key_validate_post_serialize(
        self,
        permanent_binding_plot_division_identifier,
        binding_plot_division_matter_phase_key,
        binding_plot_division_matter_phase,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        if binding_plot_division_matter_phase_key is not None:
            _path_params["bindingPlotDivisionMatterPhaseKey"] = (
                binding_plot_division_matter_phase_key
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if binding_plot_division_matter_phase is not None:
            _body_params = binding_plot_division_matter_phase

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}/phase/{bindingPlotDivisionMatterPhaseKey}/validate",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_plan_effects_post(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(description="Pysyvä yksilöivä tunnus sitovan tonttijaon asialle."),
        ],
        plan_effects: Annotated[PlanEffects, Field(description="Kaavan vaikutukset.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> str:
        """Rajapinta kaavan vaikutusten luomiseen.


        :param permanent_binding_plot_division_identifier: Pysyvä yksilöivä tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param plan_effects: Kaavan vaikutukset. (required)
        :type plan_effects: PlanEffects
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_plan_effects_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            plan_effects=plan_effects,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_plan_effects_post_with_http_info(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(description="Pysyvä yksilöivä tunnus sitovan tonttijaon asialle."),
        ],
        plan_effects: Annotated[PlanEffects, Field(description="Kaavan vaikutukset.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[str]:
        """Rajapinta kaavan vaikutusten luomiseen.


        :param permanent_binding_plot_division_identifier: Pysyvä yksilöivä tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param plan_effects: Kaavan vaikutukset. (required)
        :type plan_effects: PlanEffects
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_plan_effects_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            plan_effects=plan_effects,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_plan_effects_post_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(description="Pysyvä yksilöivä tunnus sitovan tonttijaon asialle."),
        ],
        plan_effects: Annotated[PlanEffects, Field(description="Kaavan vaikutukset.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta kaavan vaikutusten luomiseen.


        :param permanent_binding_plot_division_identifier: Pysyvä yksilöivä tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param plan_effects: Kaavan vaikutukset. (required)
        :type plan_effects: PlanEffects
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_plan_effects_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            plan_effects=plan_effects,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_plan_effects_post_serialize(
        self,
        permanent_binding_plot_division_identifier,
        plan_effects,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if plan_effects is not None:
            _body_params = plan_effects

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}/planEffects",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(description="Pysyvä yksilöivä tunnus sitovan tonttijaon asialle."),
        ],
        binding_plot_division_matter_create: Annotated[
            BindingPlotDivisionMatterCreate,
            Field(description="Sitovan tonttijaon asia."),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> str:
        """Rajapinta sitovan tonttijaon asian luomiseen.

        Asialle on varattava pysyvä yksilöivä tunnus ennen asian tuontia Ryhtiin. Pysyvän yksilöivän tunnuksen tulee olla sitovan tonttijaon pysyvä tunnus.

        :param permanent_binding_plot_division_identifier: Pysyvä yksilöivä tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_create: Sitovan tonttijaon asia. (required)
        :type binding_plot_division_matter_create: BindingPlotDivisionMatterCreate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_create=binding_plot_division_matter_create,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_with_http_info(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(description="Pysyvä yksilöivä tunnus sitovan tonttijaon asialle."),
        ],
        binding_plot_division_matter_create: Annotated[
            BindingPlotDivisionMatterCreate,
            Field(description="Sitovan tonttijaon asia."),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[str]:
        """Rajapinta sitovan tonttijaon asian luomiseen.

        Asialle on varattava pysyvä yksilöivä tunnus ennen asian tuontia Ryhtiin. Pysyvän yksilöivän tunnuksen tulee olla sitovan tonttijaon pysyvä tunnus.

        :param permanent_binding_plot_division_identifier: Pysyvä yksilöivä tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_create: Sitovan tonttijaon asia. (required)
        :type binding_plot_division_matter_create: BindingPlotDivisionMatterCreate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_create=binding_plot_division_matter_create,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(description="Pysyvä yksilöivä tunnus sitovan tonttijaon asialle."),
        ],
        binding_plot_division_matter_create: Annotated[
            BindingPlotDivisionMatterCreate,
            Field(description="Sitovan tonttijaon asia."),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta sitovan tonttijaon asian luomiseen.

        Asialle on varattava pysyvä yksilöivä tunnus ennen asian tuontia Ryhtiin. Pysyvän yksilöivän tunnuksen tulee olla sitovan tonttijaon pysyvä tunnus.

        :param permanent_binding_plot_division_identifier: Pysyvä yksilöivä tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_create: Sitovan tonttijaon asia. (required)
        :type binding_plot_division_matter_create: BindingPlotDivisionMatterCreate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_create=binding_plot_division_matter_create,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_serialize(
        self,
        permanent_binding_plot_division_identifier,
        binding_plot_division_matter_create,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if binding_plot_division_matter_create is not None:
            _body_params = binding_plot_division_matter_create

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_0(
        self,
        reserve_permanent_binding_plot_division_identifier_command: Annotated[
            ReservePermanentBindingPlotDivisionIdentifierCommand,
            Field(description="Tiedot jotka tarvitaan pysyvän tunnuksen varaamiseen."),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> str:
        """Rajapinta sitovan tonttijaon pysyvän tunnuksen varaamiseen.

        Endpoint on idempotentti. Voit kutsua rajapintaa useita kertoja samoilla parametreilla, ja se palauttaa saman tunnisteen.

        :param reserve_permanent_binding_plot_division_identifier_command: Tiedot jotka tarvitaan pysyvän tunnuksen varaamiseen. (required)
        :type reserve_permanent_binding_plot_division_identifier_command: ReservePermanentBindingPlotDivisionIdentifierCommand
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_0_serialize(
            reserve_permanent_binding_plot_division_identifier_command=reserve_permanent_binding_plot_division_identifier_command,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "str",
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_0_with_http_info(
        self,
        reserve_permanent_binding_plot_division_identifier_command: Annotated[
            ReservePermanentBindingPlotDivisionIdentifierCommand,
            Field(description="Tiedot jotka tarvitaan pysyvän tunnuksen varaamiseen."),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[str]:
        """Rajapinta sitovan tonttijaon pysyvän tunnuksen varaamiseen.

        Endpoint on idempotentti. Voit kutsua rajapintaa useita kertoja samoilla parametreilla, ja se palauttaa saman tunnisteen.

        :param reserve_permanent_binding_plot_division_identifier_command: Tiedot jotka tarvitaan pysyvän tunnuksen varaamiseen. (required)
        :type reserve_permanent_binding_plot_division_identifier_command: ReservePermanentBindingPlotDivisionIdentifierCommand
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_0_serialize(
            reserve_permanent_binding_plot_division_identifier_command=reserve_permanent_binding_plot_division_identifier_command,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "str",
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_0_without_preload_content(
        self,
        reserve_permanent_binding_plot_division_identifier_command: Annotated[
            ReservePermanentBindingPlotDivisionIdentifierCommand,
            Field(description="Tiedot jotka tarvitaan pysyvän tunnuksen varaamiseen."),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta sitovan tonttijaon pysyvän tunnuksen varaamiseen.

        Endpoint on idempotentti. Voit kutsua rajapintaa useita kertoja samoilla parametreilla, ja se palauttaa saman tunnisteen.

        :param reserve_permanent_binding_plot_division_identifier_command: Tiedot jotka tarvitaan pysyvän tunnuksen varaamiseen. (required)
        :type reserve_permanent_binding_plot_division_identifier_command: ReservePermanentBindingPlotDivisionIdentifierCommand
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_0_serialize(
            reserve_permanent_binding_plot_division_identifier_command=reserve_permanent_binding_plot_division_identifier_command,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "str",
            "201": "str",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_post_0_serialize(
        self,
        reserve_permanent_binding_plot_division_identifier_command,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if reserve_permanent_binding_plot_division_identifier_command is not None:
            _body_params = reserve_permanent_binding_plot_division_identifier_command

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/api/BindingPlotDivisionMatter/PermanentBindingPlotDivisionIdentifier",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_put(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_update: BindingPlotDivisionMatterUpdate,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Rajapinta sitovan tonttijaon asian päivittämiseen.


        :param permanent_binding_plot_division_identifier:  (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_update:  (required)
        :type binding_plot_division_matter_update: BindingPlotDivisionMatterUpdate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_put_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_update=binding_plot_division_matter_update,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "400": "ProblemDetails",
            "404": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_put_with_http_info(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_update: BindingPlotDivisionMatterUpdate,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Rajapinta sitovan tonttijaon asian päivittämiseen.


        :param permanent_binding_plot_division_identifier:  (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_update:  (required)
        :type binding_plot_division_matter_update: BindingPlotDivisionMatterUpdate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_put_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_update=binding_plot_division_matter_update,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "400": "ProblemDetails",
            "404": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_put_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: StrictStr,
        binding_plot_division_matter_update: BindingPlotDivisionMatterUpdate,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta sitovan tonttijaon asian päivittämiseen.


        :param permanent_binding_plot_division_identifier:  (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_update:  (required)
        :type binding_plot_division_matter_update: BindingPlotDivisionMatterUpdate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_put_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_update=binding_plot_division_matter_update,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "400": "ProblemDetails",
            "404": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_put_serialize(
        self,
        permanent_binding_plot_division_identifier,
        binding_plot_division_matter_update,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if binding_plot_division_matter_update is not None:
            _body_params = binding_plot_division_matter_update

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="PUT",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_validate_post(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_create: Annotated[
            BindingPlotDivisionMatterCreate,
            Field(
                description="Validoitava sitovan tonttijaon asian sisältäen ensimmäisen sitovan tonttijaon asian vaiheen."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SuccessResponse:
        """Rajapinta sitovan tonttijaon asian validoimiseen ilman tallentamista.

        Rajapinta validoi sitovan tonttijaon asian kokonaisuudessaan, sisältäen ensimmäisen vaiheen ja kaikki sen tiedot.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_create: Validoitava sitovan tonttijaon asian sisältäen ensimmäisen sitovan tonttijaon asian vaiheen. (required)
        :type binding_plot_division_matter_create: BindingPlotDivisionMatterCreate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_validate_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_create=binding_plot_division_matter_create,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_validate_post_with_http_info(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_create: Annotated[
            BindingPlotDivisionMatterCreate,
            Field(
                description="Validoitava sitovan tonttijaon asian sisältäen ensimmäisen sitovan tonttijaon asian vaiheen."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SuccessResponse]:
        """Rajapinta sitovan tonttijaon asian validoimiseen ilman tallentamista.

        Rajapinta validoi sitovan tonttijaon asian kokonaisuudessaan, sisältäen ensimmäisen vaiheen ja kaikki sen tiedot.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_create: Validoitava sitovan tonttijaon asian sisältäen ensimmäisen sitovan tonttijaon asian vaiheen. (required)
        :type binding_plot_division_matter_create: BindingPlotDivisionMatterCreate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_validate_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_create=binding_plot_division_matter_create,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def api_binding_plot_division_matter_permanent_binding_plot_division_identifier_validate_post_without_preload_content(
        self,
        permanent_binding_plot_division_identifier: Annotated[
            StrictStr,
            Field(
                description="Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle."
            ),
        ],
        binding_plot_division_matter_create: Annotated[
            BindingPlotDivisionMatterCreate,
            Field(
                description="Validoitava sitovan tonttijaon asian sisältäen ensimmäisen sitovan tonttijaon asian vaiheen."
            ),
        ],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Rajapinta sitovan tonttijaon asian validoimiseen ilman tallentamista.

        Rajapinta validoi sitovan tonttijaon asian kokonaisuudessaan, sisältäen ensimmäisen vaiheen ja kaikki sen tiedot.

        :param permanent_binding_plot_division_identifier: Pysyvä sitovan tonttijaon tunnus sitovan tonttijaon asialle. (required)
        :type permanent_binding_plot_division_identifier: str
        :param binding_plot_division_matter_create: Validoitava sitovan tonttijaon asian sisältäen ensimmäisen sitovan tonttijaon asian vaiheen. (required)
        :type binding_plot_division_matter_create: BindingPlotDivisionMatterCreate
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._api_binding_plot_division_matter_permanent_binding_plot_division_identifier_validate_post_serialize(
            permanent_binding_plot_division_identifier=permanent_binding_plot_division_identifier,
            binding_plot_division_matter_create=binding_plot_division_matter_create,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "SuccessResponse",
            "400": "ProblemDetails",
            "422": "CustomValidationProblemDetails",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _api_binding_plot_division_matter_permanent_binding_plot_division_identifier_validate_post_serialize(
        self,
        permanent_binding_plot_division_identifier,
        binding_plot_division_matter_create,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if permanent_binding_plot_division_identifier is not None:
            _path_params["permanentBindingPlotDivisionIdentifier"] = (
                permanent_binding_plot_division_identifier
            )
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if binding_plot_division_matter_create is not None:
            _body_params = binding_plot_division_matter_create

        # set the HTTP header `Accept`
        if "Accept" not in _header_params:
            _header_params["Accept"] = self.api_client.select_header_accept(
                ["text/plain", "application/json", "text/json"]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json", "text/json", "application/*+json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["oauth2", "Bearer"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/api/BindingPlotDivisionMatter/{permanentBindingPlotDivisionIdentifier}/Validate",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )
